name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: asia-northeast1
  REPOSITORY: cloud-run-source-deploy
  IMAGE_NAME: youtube-ai

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.SA_DEV }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Set environment variables
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          SERVICE_NAME="youtube-ai-pr-${PR_NUMBER}"
          IMAGE_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:pr-${PR_NUMBER}-${GITHUB_SHA::7}"

          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "SERVICE_NAME=$SERVICE_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_TAG }} .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ env.IMAGE_TAG }}

      - name: Deploy to Cloud Run (Preview)
        id: deploy
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image=${{ env.IMAGE_TAG }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --memory=512Mi \
            --cpu=1 \
            --min-instances=0 \
            --max-instances=1 \
            --timeout=300 \
            --set-secrets=OPENAI_API_KEY=openai-api-key-dev:latest,YOUTUBE_API_KEY=YOUTUBE_API_KEY:latest \
            --service-account=${{ secrets.SA_DEV }} \
            --port=8080 \
            --tag=pr-${{ env.PR_NUMBER }}

      - name: Get service URL
        id: url
        run: |
          URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region=${{ env.REGION }} \
            --format='value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "Service URL: $URL"

      - name: Wait for deployment to stabilize
        run: sleep 10

      - name: Health check
        id: health
        run: |
          URL="${{ steps.url.outputs.url }}"
          echo "Performing health check on: $URL/api/health"

          for i in {1..5}; do
            if curl -f -s "$URL/api/health" > /dev/null; then
              echo "✅ Health check passed!"
              echo "status=success" >> $GITHUB_OUTPUT
              exit 0
            fi
            echo "⏳ Attempt $i/5 failed, retrying in 5 seconds..."
            sleep 5
          done

          echo "⚠️ Health check failed, but deployment succeeded"
          echo "status=warning" >> $GITHUB_OUTPUT
          exit 0

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.url.outputs.url }}';
            const prNumber = ${{ env.PR_NUMBER }};
            const healthStatus = '${{ steps.health.outputs.status }}';
            const sha = '${{ github.sha }}'.substring(0, 7);

            const healthIcon = healthStatus === 'success' ? '✅' : '⚠️';
            const healthText = healthStatus === 'success'
              ? 'Health check passed'
              : 'Deployment succeeded but health check timed out';

            const body = `## 🚀 Preview Environment Deployed

            **URL**: ${url}

            **Status**: ${healthIcon} ${healthText}

            **Details**:
            - PR: #${prNumber}
            - Commit: \`${sha}\`
            - Service: \`${{ env.SERVICE_NAME }}\`
            - Region: \`${{ env.REGION }}\`

            ### 🧪 Testing Checklist

            Please verify the following in the preview environment:
            - [ ] Application loads successfully
            - [ ] YouTube video processing works
            - [ ] PDF upload and processing works
            - [ ] Chat functionality works
            - [ ] No console errors

            ---

            *This preview environment will be automatically deleted when the PR is closed or merged.*
            `;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Preview Environment Deployed')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
              console.log('Updated existing PR comment');
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: body
              });
              console.log('Created new PR comment');
            }

      - name: Deployment summary
        if: success()
        run: |
          echo "🎉 PR Preview deployment successful!"
          echo ""
          echo "📊 Deployment details:"
          echo "  - PR: #${{ env.PR_NUMBER }}"
          echo "  - Service: ${{ env.SERVICE_NAME }}"
          echo "  - Region: ${{ env.REGION }}"
          echo "  - Image: ${{ env.IMAGE_TAG }}"
          echo "  - URL: ${{ steps.url.outputs.url }}"
          echo ""
          echo "✅ Preview environment is ready for testing"
